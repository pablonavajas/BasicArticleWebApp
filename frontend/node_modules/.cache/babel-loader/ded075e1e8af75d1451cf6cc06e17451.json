{"ast":null,"code":"var _jsxFileName = \"/Users/pablonavajas/Documents/Imperial College/VC Relationship Management/GITLAB/extra/TutorialWeb/frontend/src/containers/Signup.js\";\nimport React from 'react';\nimport { Form, Input, Button } from 'antd';\nimport { NavLink } from 'react-router-dom';\nimport { UserOutlined, LockOutlined } from '@ant-design/icons';\nimport * as actions from '../store/actions/auth';\nimport { connect } from 'react-redux';\n\nconst RegistrationForm = props => {\n  const [form] = Form.useForm();\n\n  const onFinish = values => {\n    console.log('Received values of form: ', values);\n    props.onAuth(values.username, values.email, values.password, values.confirm);\n    props.history.push('/');\n  };\n\n  return /*#__PURE__*/React.createElement(Form, {\n    form: form,\n    name: \"register\",\n    onFinish: onFinish,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Form.Item, {\n    name: \"username\",\n    rules: [{\n      required: true,\n      message: 'Please input your Username!'\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    prefix: /*#__PURE__*/React.createElement(UserOutlined, {\n      className: \"site-form-item-icon\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 28\n      }\n    }),\n    placeholder: \"Username\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(Form.Item, {\n    name: \"email\",\n    rules: [{\n      type: 'email',\n      message: 'The input is not valid E-mail!'\n    }, {\n      required: true,\n      message: 'Please input your E-mail!'\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    prefix: /*#__PURE__*/React.createElement(UserOutlined, {\n      className: \"site-form-item-icon\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 28\n      }\n    }),\n    placeholder: \"Email\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(Form.Item, {\n    name: \"password\",\n    rules: [{\n      required: true,\n      message: 'Please input your password!'\n    }],\n    hasFeedback: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Input.Password, {\n    prefix: /*#__PURE__*/React.createElement(LockOutlined, {\n      className: \"site-form-item-icon\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 37\n      }\n    }),\n    type: \"password\",\n    placeholder: \"Password\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(Form.Item, {\n    name: \"confirm\",\n    dependencies: ['password'],\n    hasFeedback: true,\n    rules: [{\n      required: true,\n      message: 'Please confirm your password!'\n    }, ({\n      getFieldValue\n    }) => ({\n      validator(rule, value) {\n        if (!value || getFieldValue('password') === value) {\n          return Promise.resolve();\n        }\n\n        return Promise.reject('The two passwords that you entered do not match!');\n      }\n\n    })],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Input.Password, {\n    prefix: /*#__PURE__*/React.createElement(LockOutlined, {\n      className: \"site-form-item-icon\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 37\n      }\n    }),\n    type: \"password\",\n    placeholder: \"Password\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(Form.Item, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    type: \"primary\",\n    htmlType: \"submit\",\n    style: {\n      marginRight: '10px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 13\n    }\n  }, \"Sign Up\"), \"Or\", /*#__PURE__*/React.createElement(NavLink, {\n    style: {\n      marginRight: '10px'\n    },\n    to: \"/login/\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 13\n    }\n  }, \" Login\")));\n};\n\nconst mapStateToProps = state => {\n  return {\n    loading: state.loading,\n    error: state.error\n  };\n};\n\nconst mapDispatchToProps = dispatch => ({\n  onAuth: (username, email, password1, password2) => dispatch(actions.authSignup(username, email, password1, password2))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(RegistrationForm);","map":{"version":3,"sources":["/Users/pablonavajas/Documents/Imperial College/VC Relationship Management/GITLAB/extra/TutorialWeb/frontend/src/containers/Signup.js"],"names":["React","Form","Input","Button","NavLink","UserOutlined","LockOutlined","actions","connect","RegistrationForm","props","form","useForm","onFinish","values","console","log","onAuth","username","email","password","confirm","history","push","required","message","type","getFieldValue","validator","rule","value","Promise","resolve","reject","marginRight","mapStateToProps","state","loading","error","mapDispatchToProps","dispatch","password1","password2","authSignup"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {\n  Form,\n  Input, \n  Button\n} from 'antd';\nimport { NavLink } from 'react-router-dom';\nimport { UserOutlined, LockOutlined } from '@ant-design/icons';\n\nimport * as actions from '../store/actions/auth';\nimport { connect } from 'react-redux';\n\nconst RegistrationForm = (props) => {\n  const [form] = Form.useForm();\n\n  const onFinish = values => {\n    console.log('Received values of form: ', values);\n    props.onAuth(\n        values.username,\n        values.email,\n        values.password,\n        values.confirm\n        );\n    props.history.push('/');\n  };\n\n  return (\n    <Form form={form}\n    name=\"register\"\n    onFinish={onFinish}>\n        <Form.Item\n            name=\"username\"\n            rules={[\n                {\n                    required: true,\n                    message: 'Please input your Username!',\n                },\n            ]}\n        >\n            <Input prefix={<UserOutlined className=\"site-form-item-icon\" />} placeholder=\"Username\" />\n        </Form.Item>\n\n        <Form.Item\n            name=\"email\"\n            rules={[\n            {\n                type: 'email',\n                message: 'The input is not valid E-mail!',\n            },\n            {\n                required: true,\n                message: 'Please input your E-mail!',\n            },\n            ]}\n        >\n            <Input prefix={<UserOutlined className=\"site-form-item-icon\" />} placeholder=\"Email\" />\n        </Form.Item>\n\n        <Form.Item\n            name=\"password\"\n            rules={[\n            {\n                required: true,\n                message: 'Please input your password!',\n            },\n            ]}\n            hasFeedback\n        >\n            <Input.Password prefix={<LockOutlined className=\"site-form-item-icon\" />}\n                    type=\"password\"\n                    placeholder=\"Password\" />\n        </Form.Item>\n\n        <Form.Item\n            name=\"confirm\"\n            dependencies={['password']}\n            hasFeedback\n            rules={[\n            {\n                required: true,\n                message: 'Please confirm your password!',\n            },\n            ({ getFieldValue }) => ({\n                validator(rule, value) {\n                if (!value || getFieldValue('password') === value) {\n                    return Promise.resolve();\n                }\n\n                return Promise.reject('The two passwords that you entered do not match!');\n                },\n            }),\n        ]}\n        >\n            <Input.Password prefix={<LockOutlined className=\"site-form-item-icon\" />}\n                    type=\"password\"\n                    placeholder=\"Password\"/>\n        </Form.Item>\n\n        <Form.Item>\n            <Button type=\"primary\" htmlType=\"submit\" style={{marginRight: '10px'}}>\n                Sign Up\n            </Button>\n            Or\n            <NavLink \n                style={{marginRight: '10px'}} to='/login/'> Login\n            </NavLink>\n        </Form.Item>\n      \n    </Form>\n  );\n};\n\nconst mapStateToProps = state => {\n    return {\n        loading: state.loading,\n        error: state.error\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => ({\n    onAuth: (username, email, password1, password2) => dispatch(actions.authSignup(username, email, password1, password2))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(RegistrationForm);"]},"metadata":{},"sourceType":"module"}