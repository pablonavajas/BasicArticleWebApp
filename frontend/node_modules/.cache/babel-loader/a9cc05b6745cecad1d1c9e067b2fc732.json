{"ast":null,"code":"var _jsxFileName = \"/Users/pablonavajas/Documents/Imperial College/VC Relationship Management/GITLAB/extra/TutorialWeb/frontend/src/containers/Login.js\";\nimport React from 'react';\nimport { Form, Input, Button, Spin } from 'antd';\nimport { NavLink } from 'react-router-dom';\nimport { UserOutlined, LockOutlined, LoadingOutlined } from '@ant-design/icons';\nimport * as actions from '../store/actions/auth';\nimport { connect } from 'react-redux';\nconst antIcon = /*#__PURE__*/React.createElement(LoadingOutlined, {\n  style: {\n    fontSize: 24\n  },\n  spin: true,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 17\n  }\n});\n\nconst NormalLoginForm = props => {\n  const onFinish = values => {\n    console.log('username is: ', values.username);\n    console.log('password is:', values.password);\n    props.onAuth(values.username, values.password);\n    props.history.push('/');\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }\n  }, props.loading ? /*#__PURE__*/React.createElement(Spin, {\n    indicator: antIcon,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 17\n    }\n  }) : /*#__PURE__*/React.createElement(Form, {\n    name: \"normal_login\",\n    className: \"login-form\",\n    initialValues: {\n      remember: true\n    },\n    onFinish: onFinish,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Form.Item, {\n    name: \"username\",\n    rules: [{\n      required: true,\n      message: 'Please input your Username!'\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    prefix: /*#__PURE__*/React.createElement(UserOutlined, {\n      className: \"site-form-item-icon\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 36\n      }\n    }),\n    placeholder: \"Username\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(Form.Item, {\n    name: \"password\",\n    rules: [{\n      required: true,\n      message: 'Please input your Password!'\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    prefix: /*#__PURE__*/React.createElement(LockOutlined, {\n      className: \"site-form-item-icon\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 29\n      }\n    }),\n    type: \"password\",\n    placeholder: \"Password\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(Form.Item, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    type: \"primary\",\n    htmlType: \"submit\",\n    style: {\n      marginRight: '10px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 21\n    }\n  }, \"Log in\"), \"Or\", /*#__PURE__*/React.createElement(NavLink, {\n    style: {\n      marginRight: '10px'\n    },\n    to: \"/signup/\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 25\n    }\n  }, \" Sign Up\"))));\n};\n\nconst mapStateToProps = state => {\n  return {\n    loading: state.loading,\n    error: state.error\n  };\n};\n\nconst mapDispatchToProps = dispatch => ({\n  onAuth: (username, password) => dispatch(actions.authLogin(username, password))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(NormalLoginForm);","map":{"version":3,"sources":["/Users/pablonavajas/Documents/Imperial College/VC Relationship Management/GITLAB/extra/TutorialWeb/frontend/src/containers/Login.js"],"names":["React","Form","Input","Button","Spin","NavLink","UserOutlined","LockOutlined","LoadingOutlined","actions","connect","antIcon","fontSize","NormalLoginForm","props","onFinish","values","console","log","username","password","onAuth","history","push","loading","remember","required","message","marginRight","mapStateToProps","state","error","mapDispatchToProps","dispatch","authLogin"],"mappings":"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","sourcesContent":["import React from 'react';\n\nimport { Form, Input, Button, Spin } from 'antd';\nimport { NavLink } from 'react-router-dom';\nimport { UserOutlined, LockOutlined, LoadingOutlined } from '@ant-design/icons';\n\nimport * as actions from '../store/actions/auth';\n\nimport { connect } from 'react-redux';\n\nconst antIcon = <LoadingOutlined style={{ fontSize: 24 }} spin />;\n\n\nconst NormalLoginForm = (props) => {\n    const onFinish = (values) => {\n        console.log('username is: ', values.username);\n        console.log('password is:', values.password);\n        props.onAuth(values.username, values.password);\n        props.history.push('/');\n    };\n\n    return (\n        <div>\n            {\n                props.loading ?\n\n                <Spin indicator={antIcon} />\n\n                :\n    \n                <Form\n                name=\"normal_login\"\n                className=\"login-form\"\n                initialValues={{\n                    remember: true,\n                }}\n                onFinish={onFinish}\n                >\n                <Form.Item\n                    name=\"username\"\n                    rules={[\n                    {\n                        required: true,\n                        message: 'Please input your Username!',\n                    },\n                    ]}\n                >\n                    <Input prefix={<UserOutlined className=\"site-form-item-icon\" />} placeholder=\"Username\" />\n                </Form.Item>\n                <Form.Item\n                    name=\"password\"\n                    rules={[\n                    {\n                        required: true,\n                        message: 'Please input your Password!',\n                    },\n                    ]}\n                >\n                    <Input\n                    prefix={<LockOutlined className=\"site-form-item-icon\" />}\n                    type=\"password\"\n                    placeholder=\"Password\"\n                    />\n                </Form.Item>\n                <Form.Item>\n                    <Button type=\"primary\" htmlType=\"submit\" style={{marginRight: '10px'}}>\n                        Log in\n                        </Button>\n                        Or\n                        <NavLink \n                            style={{marginRight: '10px'}} to='/signup/'> Sign Up\n                        </NavLink>\n                </Form.Item>\n                </Form>\n            }\n        </div>\n    );\n};\n\nconst mapStateToProps = state => {\n    return {\n        loading: state.loading,\n        error: state.error\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => ({\n    onAuth: (username, password) => dispatch(actions.authLogin(username, password))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(NormalLoginForm);"]},"metadata":{},"sourceType":"module"}